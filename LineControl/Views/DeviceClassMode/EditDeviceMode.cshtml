@model DeviceModelViewModel
@{
  ViewData["Title"] = "Edit DeviceModel";
}
<div class="container mt-4">
  <div class="card">
    <div class="card-header">
      <h2>Edit Device Model</h2>
    </div>
    <div class="card-body">
      @using (Html.BeginForm("EditDeviceMode", "DeviceClassMode", FormMethod.Post, new { @class = "ControllForm" }))
      {
        @Html.AntiForgeryToken()
        <input type="hidden" asp-for="Id" />
        <div class="s-formContent row justify-content-md-center">
          <div class="form-row form-group">
            <div class="form-row form-group">
              <div class="col s-paddingBtn">
                <button class="btn btn-primary s-button" type="submit"><i class='k-icon k-i-save'></i><span>Save</span></button>
                <button class="btn btn-danger s-button s-CancelBtn" data-request-url="@Url.Action("Index", "DeviceClassMode")"><i class='k-icon k-i-cancel'></i><span> Cancel</span></button>
              </div>
            </div>
           <div class="col-12">
              <label class="s-label" asp-for="@Model.Name">Name</label>
            </div>
            <div class="col-12">
              @(Html.Kendo().TextAreaFor(m => m.Name)
                  .HtmlAttributes(new { @class = "s-customTextArea" })
                  .Rows(1).Deferred(true)
                  )
            </div>
          </div>
          <div class="col-12">
            <label class="s-label" asp-for="@Model.LastChangeUser">Last Change User</label>
          </div>
          <div class="col-12">
            @(Html.Kendo().TextAreaFor(m => m.LastChangeUser)
                .HtmlAttributes(new { @class = "s-customTextArea", @readonly = "readonly" })
                .Rows(1).Deferred(true)
                )
          </div>
        </div>
      }
      <div>
        @if (!ViewData.ModelState.IsValid)
        {
          <div class="alert alert-danger">
            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
              <p>@error.ErrorMessage</p>
            }
          </div>
        }
      </div>
    </div>
  </div>
</div>