// <auto-generated />
using System;
using LineControllerInfrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LineControllerInfrastructure.Migrations
{
    [DbContext(typeof(LineContextDb))]
    [Migration("20240422190554_CreateTablesForEntities")]
    partial class CreateTablesForEntities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LineControllerInfrastructure.Entities.ActivityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ActivityTypeId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostCenter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PassiveCostFactor")
                        .HasColumnType("DECIMAL(18, 3)");

                    b.Property<decimal>("Rate")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.HasKey("Id");

                    b.ToTable("ActivityTypes");
                });

            modelBuilder.Entity("LineControllerInfrastructure.Entities.CompanyLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CompanyLocationId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CompanyLocations");
                });

            modelBuilder.Entity("LineControllerInfrastructure.Entities.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DeviceId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Accessories")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ActivityTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CalibrationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CalibrationInterval")
                        .HasColumnType("int");

                    b.Property<string>("CalibrationLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("CalibrationResult")
                        .HasColumnType("DECIMAL(18, 3)");

                    b.Property<string>("CalibrationTester")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("CostFactor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CreatedById")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeviceClassId")
                        .HasColumnType("int");

                    b.Property<string>("EquipmentNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InventoryNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ItemNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MaterialNumber")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MeasurementMax")
                        .HasColumnType("DECIMAL(18, 4)");

                    b.Property<decimal?>("MeasurementMin")
                        .HasColumnType("DECIMAL(18, 4)");

                    b.Property<string>("MeasurementUnit")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<bool>("Reservation")
                        .HasColumnType("bit");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int?>("StoragePlaceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActivityTypeId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeviceClassId");

                    b.HasIndex("ParentId");

                    b.HasIndex("StatusId");

                    b.HasIndex("StoragePlaceId");

                    b.ToTable("Device");
                });

            modelBuilder.Entity("LineControllerInfrastructure.Entities.DeviceClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DeviceClassId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DeviceModelId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DeviceModelId");

                    b.ToTable("DeviceClasses");
                });

            modelBuilder.Entity("LineControllerInfrastructure.Entities.DeviceHistory", b =>
                {
                    b.Property<int>("DeviceId")
                        .HasColumnType("int");

                    b.Property<int>("ModificationUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NewValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DeviceId", "ModificationUserId", "ModificationDate");

                    b.HasIndex("ModificationUserId");

                    b.ToTable("DeviceHistory", (string)null);
                });

            modelBuilder.Entity("LineControllerInfrastructure.Entities.DeviceIssue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DeviceIssueId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountingNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AccountingType")
                        .HasColumnType("int");

                    b.Property<int?>("CollectorId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedById")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeviceId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RecipientId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReturnDateActual")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ReturnDatePlanned")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CollectorId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeviceId");

                    b.HasIndex("RecipientId");

                    b.ToTable("DeviceIssue", (string)null);
                });

            modelBuilder.Entity("LineControllerInfrastructure.Entities.DeviceModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DeviceModelId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DeviceModels");
                });

            modelBuilder.Entity("LineControllerInfrastructure.Entities.DeviceReservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DeviceReservationId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountingNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DeviceClassId")
                        .HasColumnType("int");

                    b.Property<int>("DeviceId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("IssueId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<decimal?>("MeasurementMax")
                        .HasColumnType("DECIMAL(18, 4)");

                    b.Property<decimal?>("MeasurementMin")
                        .HasColumnType("DECIMAL(18, 4)");

                    b.Property<string>("MeasurementUnit")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.HasIndex("IssueId")
                        .IsUnique();

                    b.HasIndex("StatusId");

                    b.HasIndex("UserId");

                    b.ToTable("DeviceReservation", (string)null);
                });

            modelBuilder.Entity("LineControllerInfrastructure.Entities.DeviceStatus", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DeviceStatuses");
                });

            modelBuilder.Entity("LineControllerInfrastructure.Entities.InventoryLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("InventoryLocationId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("ActivityTypeId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<decimal?>("CostFactor")
                        .HasColumnType("DECIMAL(18, 3)");

                    b.Property<bool>("GenerateCharge")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ResponsibleId")
                        .HasColumnType("int");

                    b.Property<bool>("SendManagerEmail")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ActivityTypeId");

                    b.HasIndex("ResponsibleId");

                    b.ToTable("InventoryLocations");
                });

            modelBuilder.Entity("LineControllerInfrastructure.Entities.ReservationPeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Max")
                        .HasColumnType("int");

                    b.Property<int>("Min")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ReservationPeriods");
                });

            modelBuilder.Entity("LineControllerInfrastructure.Entities.ReservationStatus", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ReservationStatuses");
                });

            modelBuilder.Entity("LineControllerInfrastructure.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoleId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Deactivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("LineControllerInfrastructure.Entities.StoragePlace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StoragePlaceId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Building")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyLocationId")
                        .HasColumnType("int");

                    b.Property<string>("Floor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InventoryLocationId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ResponsibleId")
                        .HasColumnType("int");

                    b.Property<string>("RoomDesignation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyLocationId");

                    b.HasIndex("InventoryLocationId");

                    b.HasIndex("ResponsibleId");

                    b.ToTable("StoragePlace", (string)null);
                });

            modelBuilder.Entity("LineControllerInfrastructure.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyLocationId")
                        .HasColumnType("int");

                    b.Property<string>("CostCenter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("PersonalNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyLocationId");

                    b.HasIndex("ManagerId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("LineControllerInfrastructure.Entities.Device", b =>
                {
                    b.HasOne("LineControllerInfrastructure.Entities.ActivityType", "ActivityType")
                        .WithMany()
                        .HasForeignKey("ActivityTypeId");

                    b.HasOne("LineControllerInfrastructure.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LineControllerInfrastructure.Entities.DeviceClass", "DeviceClass")
                        .WithMany()
                        .HasForeignKey("DeviceClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LineControllerInfrastructure.Entities.Device", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.HasOne("LineControllerInfrastructure.Entities.DeviceStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LineControllerInfrastructure.Entities.StoragePlace", null)
                        .WithMany("Devices")
                        .HasForeignKey("StoragePlaceId");

                    b.Navigation("ActivityType");

                    b.Navigation("CreatedBy");

                    b.Navigation("DeviceClass");

                    b.Navigation("Parent");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("LineControllerInfrastructure.Entities.DeviceClass", b =>
                {
                    b.HasOne("LineControllerInfrastructure.Entities.DeviceModel", "DeviceModel")
                        .WithMany()
                        .HasForeignKey("DeviceModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeviceModel");
                });

            modelBuilder.Entity("LineControllerInfrastructure.Entities.DeviceHistory", b =>
                {
                    b.HasOne("LineControllerInfrastructure.Entities.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LineControllerInfrastructure.Entities.User", "ModificationUser")
                        .WithMany()
                        .HasForeignKey("ModificationUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Device");

                    b.Navigation("ModificationUser");
                });

            modelBuilder.Entity("LineControllerInfrastructure.Entities.DeviceIssue", b =>
                {
                    b.HasOne("LineControllerInfrastructure.Entities.User", "Collector")
                        .WithMany()
                        .HasForeignKey("CollectorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LineControllerInfrastructure.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LineControllerInfrastructure.Entities.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LineControllerInfrastructure.Entities.User", "Recipient")
                        .WithMany()
                        .HasForeignKey("RecipientId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Collector");

                    b.Navigation("CreatedBy");

                    b.Navigation("Device");

                    b.Navigation("Recipient");
                });

            modelBuilder.Entity("LineControllerInfrastructure.Entities.DeviceReservation", b =>
                {
                    b.HasOne("LineControllerInfrastructure.Entities.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LineControllerInfrastructure.Entities.DeviceIssue", "Issue")
                        .WithOne("Reservation")
                        .HasForeignKey("LineControllerInfrastructure.Entities.DeviceReservation", "IssueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LineControllerInfrastructure.Entities.ReservationStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LineControllerInfrastructure.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Device");

                    b.Navigation("Issue");

                    b.Navigation("Status");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LineControllerInfrastructure.Entities.InventoryLocation", b =>
                {
                    b.HasOne("LineControllerInfrastructure.Entities.ActivityType", "ActivityType")
                        .WithMany()
                        .HasForeignKey("ActivityTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LineControllerInfrastructure.Entities.User", "Responsible")
                        .WithMany()
                        .HasForeignKey("ResponsibleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActivityType");

                    b.Navigation("Responsible");
                });

            modelBuilder.Entity("LineControllerInfrastructure.Entities.StoragePlace", b =>
                {
                    b.HasOne("LineControllerInfrastructure.Entities.CompanyLocation", "CompanyLocation")
                        .WithMany()
                        .HasForeignKey("CompanyLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LineControllerInfrastructure.Entities.InventoryLocation", "InventoryLocation")
                        .WithMany("StoragePlaces")
                        .HasForeignKey("InventoryLocationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LineControllerInfrastructure.Entities.User", "Responsible")
                        .WithMany()
                        .HasForeignKey("ResponsibleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CompanyLocation");

                    b.Navigation("InventoryLocation");

                    b.Navigation("Responsible");
                });

            modelBuilder.Entity("LineControllerInfrastructure.Entities.User", b =>
                {
                    b.HasOne("LineControllerInfrastructure.Entities.CompanyLocation", "CompanyLocation")
                        .WithMany("Users")
                        .HasForeignKey("CompanyLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LineControllerInfrastructure.Entities.User", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerId");

                    b.Navigation("CompanyLocation");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("LineControllerInfrastructure.Entities.CompanyLocation", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("LineControllerInfrastructure.Entities.DeviceIssue", b =>
                {
                    b.Navigation("Reservation")
                        .IsRequired();
                });

            modelBuilder.Entity("LineControllerInfrastructure.Entities.InventoryLocation", b =>
                {
                    b.Navigation("StoragePlaces");
                });

            modelBuilder.Entity("LineControllerInfrastructure.Entities.StoragePlace", b =>
                {
                    b.Navigation("Devices");
                });
#pragma warning restore 612, 618
        }
    }
}
