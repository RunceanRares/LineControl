using AutoMapper;
using LineControl.Models;
using LineControllerCore.Model;
using LineControllerInfrastructure.Entities;

using System.Text.RegularExpressions;

namespace LineControllerCore.Mapping
{
  public class DeviceMapperProfiler : Profile
  {
    public DeviceMapperProfiler()
    {
      CreateMap<DeviceEditViewModel, Device>()
              .ForMember(dest => dest.Id, opt => opt.MapFrom(src => src.Id))
              .ForMember(dest => dest.ItemNumber, opt => opt.MapFrom(src => src.ItemNumber))
              .ForMember(dest => dest.ParentId, opt => opt.MapFrom(src => src.ParentId))
              .ForMember(dest => dest.CreatedBy, opt => opt.Ignore())
              .ForMember(dest => dest.CreationDate, opt => opt.Ignore())
              .ForMember(dest => dest.DeviceClassId, opt => opt.MapFrom(src => src.DeviceClassId))
              .ForMember(dest => dest.MeasurementMin, opt => opt.MapFrom(src => src.MeasurementMin))
              .ForMember(dest => dest.MeasurementMax, opt => opt.MapFrom(src => src.MeasurementMax))
              .ForMember(dest => dest.MeasurementUnit, opt => opt.MapFrom(src => src.MeasurementUnit))
              .ForMember(dest => dest.StoragePlaceId, opt => opt.MapFrom(src => src.StoragePlaceId))
              .ForMember(dest => dest.InventoryNumber, opt => opt.MapFrom(src => src.InventoryNumber))
              .ForMember(dest => dest.EquipmentNumber, opt => opt.MapFrom(src => src.EquipmentNumber))
              .ForMember(dest => dest.SerialNumber, opt => opt.MapFrom(src => src.SerialNumber))
              .ForMember(dest => dest.StatusId, opt => opt.MapFrom(src => src.StatusId))
              .ForMember(dest => dest.ActivityTypeId, opt => opt.MapFrom(src => src.ActivityTypeId))
              .ForMember(dest => dest.CostFactor, opt => opt.MapFrom(src => src.CostFactor))
              .ForMember(dest => dest.Accessories, opt => opt.MapFrom(src => src.Accessories))
              .ForMember(dest => dest.Comment, opt => opt.MapFrom(src => src.Comment))
              .ForMember(dest => dest.CalibrationTester, opt => opt.MapFrom(src => src.CalibrationTester))
              .ForMember(dest => dest.CalibrationLocation, opt => opt.MapFrom(src => src.CalibrationLocation))
              .ForMember(dest => dest.CalibrationDate, opt => opt.MapFrom(src => src.CalibrationDate))
              .ForMember(dest => dest.CalibrationInterval, opt => opt.MapFrom(src => src.CalibrationInterval))
              .ForMember(dest => dest.CalibrationResult, opt => opt.MapFrom(src => src.CalibrationResult))
              .ForMember(dest => dest.MaterialNumber, opt => opt.MapFrom(src => src.MaterialNumber));

      CreateMap<Device, DeviceEditViewModel>()
              .ForMember(dest => dest.Id, opt => opt.MapFrom(src => src.Id))
              .ForMember(dest => dest.ItemNumber, opt => opt.MapFrom(src => src.ItemNumber))
              .ForMember(dest => dest.DeviceClassId, opt => opt.MapFrom(src => src.DeviceClassId))
              .ForMember(dest => dest.DeviceModel, opt => opt.MapFrom(src => src.DeviceClass.DeviceModel.Name))
              .ForMember(dest => dest.MeasurementMin, opt => opt.MapFrom(src => src.MeasurementMin))
              .ForMember(dest => dest.MeasurementMax, opt => opt.MapFrom(src => src.MeasurementMax))
              .ForMember(dest => dest.MeasurementUnit, opt => opt.MapFrom(src => src.MeasurementUnit))
              .ForMember(dest => dest.StatusId, opt => opt.MapFrom(src => src.StatusId))
              .ForMember(dest => dest.InventoryLocationId, opt => opt.MapFrom(src => src.StoragePlace.InventoryLocationId))
              .ForMember(dest => dest.StoragePlaceId, opt => opt.MapFrom(src => src.StoragePlaceId))
              .ForMember(dest => dest.ParentId, opt => opt.MapFrom(src => src.ParentId))
              .ForMember(dest => dest.ParentItemNumber, opt => opt.MapFrom(src => src.Parent.ItemNumber))
              .ForMember(dest => dest.ActivityTypeId, opt => opt.MapFrom(src => src.ActivityTypeId))
              .ForMember(dest => dest.ActivityTypeRate, opt => opt.MapFrom(src => src.ActivityType.Rate))
              .ForMember(dest => dest.ActivityTypePassiveCostFactor, opt => opt.MapFrom(src => src.ActivityType.PassiveCostFactor))
              .ForMember(dest => dest.InventoryNumber, opt => opt.MapFrom(src => src.InventoryNumber))
              .ForMember(dest => dest.EquipmentNumber, opt => opt.MapFrom(src => src.EquipmentNumber))
              .ForMember(dest => dest.SerialNumber, opt => opt.MapFrom(src => src.SerialNumber))
              .ForMember(dest => dest.IssueComment, opt => opt.MapFrom(src => src.Issues.FirstOrDefault(i => i.ReturnDateActual == null).Description))
              .ForMember(dest => dest.CostFactor, opt => opt.MapFrom(src => src.CostFactor))
              .ForMember(dest => dest.Accessories, opt => opt.MapFrom(src => src.Accessories))
              .ForMember(dest => dest.Comment, opt => opt.MapFrom(src => src.Comment))
              .ForMember(dest => dest.CalibrationTester, opt => opt.MapFrom(src => src.CalibrationTester))
              .ForMember(dest => dest.CalibrationLocation, opt => opt.MapFrom(src => src.CalibrationLocation))
              .ForMember(dest => dest.CalibrationDate, opt => opt.MapFrom(src => src.CalibrationDate))
              .ForMember(dest => dest.CalibrationInterval, opt => opt.MapFrom(src => src.CalibrationInterval))
              .ForMember(dest => dest.CalibrationResult, opt => opt.MapFrom(src => src.CalibrationResult))
              .ForMember(dest => dest.MaterialNumber, opt => opt.MapFrom(src => src.MaterialNumber))
              .ForMember(dest => dest.CreationDate, opt => opt.MapFrom(src => src.CreationDate))
              .ForMember(dest => dest.IssueDate, opt => opt.MapFrom(src => src.Issues.FirstOrDefault(i => i.ReturnDateActual == null).IssueDate))
              .ForMember(dest => dest.AccountingNumber, opt => opt.MapFrom(src => src.Issues.FirstOrDefault(i => i.ReturnDateActual == null).AccountingNumber))
              .ForMember(dest => dest.IssuedToFirstName, opt => opt.MapFrom(src => src.Issues.FirstOrDefault(i => i.ReturnDateActual == null).Recipient.FirstName))
              .ForMember(dest => dest.IssuedToLastName, opt => opt.MapFrom(src => src.Issues.FirstOrDefault(i => i.ReturnDateActual == null).Recipient.LastName))
              .ForMember(dest => dest.IssuedToDepartment, opt => opt.MapFrom(src => src.Issues.FirstOrDefault(i => i.ReturnDateActual == null).Recipient.Department))
              .ForMember(dest => dest.CreatedByFirstName, opt => opt.MapFrom(src => src.CreatedBy.FirstName))
              .ForMember(dest => dest.CreatedByLastName, opt => opt.MapFrom(src => src.CreatedBy.LastName))
              .ForMember(dest => dest.CreatedByDepartment, opt => opt.MapFrom(src => src.CreatedBy.Department))
              .ForMember(dest => dest.IssueId, opt => opt.MapFrom(src => src.Issues.FirstOrDefault(i => i.ReturnDateActual == null).Id))
              .ForMember(dest => dest.IsCalibrationDue, opt => opt.MapFrom((src, dest, _, resContext) => dest.IsCalibrationDue = src.CalibrationDate != null &&
                                                                                                                                 src.CalibrationInterval != null &&
                                                                                                                                 src.CalibrationDate.Value.AddMonths(src.CalibrationInterval.Value) <= (DateTime)resContext.Items["now"]))
              .ForMember(dest => dest.HasReservations, opt => opt.MapFrom(src => src.Reservations.Any(r => r.StatusId == ReservationStatusViewModel.OpenId)));

      CreateMap<Device, DeviceViewModel>()
            .ForMember(dest => dest.Id, opt => opt.MapFrom(src => src.Id))
            .ForMember(dest => dest.ItemNumber, opt => opt.MapFrom(src => src.ItemNumber))
            .ForMember(dest => dest.DeviceClassId, opt => opt.MapFrom(src => src.DeviceClassId))
            .ForMember(dest => dest.DeviceModel, opt => opt.MapFrom(src => src.DeviceClass.DeviceModel.Name))
            .ForMember(dest => dest.Accessories, opt => opt.MapFrom(src => src.Accessories))
            .ForMember(dest => dest.MeasurementMin, opt => opt.MapFrom(src => src.MeasurementMin))
            .ForMember(dest => dest.MeasurementMax, opt => opt.MapFrom(src => src.MeasurementMax))
            .ForMember(dest => dest.MeasurementUnit, opt => opt.MapFrom(src => src.MeasurementUnit))
            .ForMember(dest => dest.StatusName, opt => opt.MapFrom(src => src.StatusId == DeviceStatus.UsableId ? (src.CalibrationDate <= DateTime.Today ? DeviceStatus.UsableId : DeviceStatus.ReservedId)
                                                                             : src.StatusId == DeviceStatus.LostId ? (src.StoragePlaceId == null ? DeviceStatus.LostId : DeviceStatus.LockedId)
                                                                             : src.StatusId == DeviceStatus.LockedId ? (src.Reservation == true ? DeviceStatus.LockedId : DeviceStatus.NotUsableIssuedId)
                                                                             : src.StatusId == DeviceStatus.LostId ? (src.StoragePlaceId == null ? DeviceStatus.LostId : DeviceStatus.LockedId)
                                                                             : src.StatusId == DeviceStatus.LostId ? (src.StoragePlaceId == null ? DeviceStatus.LostId : DeviceStatus.LockedId) : DeviceStatus.UsableId))
            .ForMember(dest => dest.StatusId, opt => opt.MapFrom(src => src.StatusId))
            .ForMember(dest => dest.InventoryLocation, opt => opt.MapFrom(src => src.StoragePlace.InventoryLocation))
            .ForMember(dest => dest.StoragePlace, opt => opt.MapFrom(src => src.StoragePlace.Place + " " + src.StoragePlace.RoomNumber + " " + src.StoragePlace.Building))
            .ForMember(dest => dest.ParentItemNumber, opt => opt.MapFrom(src => src.Parent.ItemNumber))
            .ForMember(dest => dest.ActivityTypeId, opt => opt.MapFrom(src => src.ActivityTypeId))
            .ForMember(dest => dest.ActivityType, opt => opt.MapFrom(src => src.ActivityType.Rate))
            .ForMember(dest => dest.PassiveCostFactor, opt => opt.MapFrom(src => src.ActivityType.PassiveCostFactor))
            .ForMember(dest => dest.InventoryNumber, opt => opt.MapFrom(src => src.InventoryNumber))
            .ForMember(dest => dest.EquipmentNumber, opt => opt.MapFrom(src => src.EquipmentNumber))
            .ForMember(dest => dest.Comment, opt => opt.MapFrom(src => src.Comment))
            .ForMember(dest => dest.CreationDate, opt => opt.MapFrom(src => src.CreationDate))
            .ForMember(dest => dest.MaterialNumber, opt => opt.MapFrom(src => src.MaterialNumber))
            .ForMember(dest => dest.Accessories, opt => opt.MapFrom(src => src.Accessories))
            .ForMember(dest => dest.CostFactor, opt => opt.MapFrom(src => src.CostFactor))
            .ForMember(dest => dest.CreatedByFirstName, opt => opt.MapFrom(src => src.CreatedBy.FirstName))
            .ForMember(dest => dest.CreatedByLastName, opt => opt.MapFrom(src => src.CreatedBy.LastName))
            .ForMember(dest => dest.CalibrationTester, opt => opt.MapFrom(src => src.CalibrationTester))
            .ForMember(dest => dest.CalibrationLocation, opt => opt.MapFrom(src => src.CalibrationLocation))
            .ForMember(dest => dest.CalibrationDate, opt => opt.MapFrom(src => src.CalibrationDate))
            .ForMember(dest => dest.CreatedByDepartment, opt => opt.MapFrom(src => src.CreatedBy.Department))
            .ForMember(dest => dest.AccountingNumber, opt => opt.MapFrom(src => src.Issues.FirstOrDefault(i => i.ReturnDateActual == null).AccountingNumber))
            .ForMember(dest => dest.IssueId, opt => opt.MapFrom(src => src.Issues.SingleOrDefault().Id))
            .ForMember(dest => dest.IssueDate, opt => opt.MapFrom(src => src.Issues.SingleOrDefault().IssueDate))
            .ForMember(dest => dest.IssueComment, opt => opt.MapFrom(src => src.Issues.SingleOrDefault().Description))
            .ForMember(dest => dest.CalibrationResult, opt => opt.MapFrom(src => src.CalibrationResult))
            .ForMember(dest => dest.SerialNumber, opt => opt.MapFrom(src => src.SerialNumber));

      CreateMap<DeviceViewModel, Device>()
           .ForMember(dest => dest.Id, opt => opt.MapFrom(src => src.Id))
           .ForMember(dest => dest.ItemNumber, opt => opt.MapFrom(src => src.ItemNumber))
           .ForMember(dest => dest.DeviceClassId, opt => opt.MapFrom(src => src.DeviceClassId))
           .ForMember(dest => dest.MeasurementMin, opt => opt.MapFrom(src => src.MeasurementMin))
           .ForMember(dest => dest.MeasurementMax, opt => opt.MapFrom(src => src.MeasurementMax))
           .ForMember(dest => dest.MeasurementUnit, opt => opt.MapFrom(src => src.MeasurementUnit))
           .ForMember(dest => dest.StatusId, opt => opt.MapFrom(src => src.StatusId))
           .ForMember(dest => dest.StoragePlace, opt => opt.MapFrom(src => src.StoragePlace))
           .ForMember(dest => dest.ActivityTypeId, opt => opt.MapFrom(src => src.ActivityTypeId))
           .ForMember(dest => dest.ActivityType, opt => opt.MapFrom(src => src.ActivityType))
           .ForMember(dest => dest.InventoryNumber, opt => opt.MapFrom(src => src.InventoryNumber))
           .ForMember(dest => dest.EquipmentNumber, opt => opt.MapFrom(src => src.EquipmentNumber))
           .ForMember(dest => dest.SerialNumber, opt => opt.MapFrom(src => src.SerialNumber))
           .ForMember(dest => dest.CostFactor, opt => opt.MapFrom(src => src.CostFactor))
           .ForMember(dest => dest.Accessories, opt => opt.MapFrom(src => src.Accessories))
           .ForMember(dest => dest.Comment, opt => opt.MapFrom(src => src.Comment))
           .ForMember(dest => dest.CalibrationTester, opt => opt.MapFrom(src => src.CalibrationTester))
           .ForMember(dest => dest.CalibrationLocation, opt => opt.MapFrom(src => src.CalibrationLocation))
           .ForMember(dest => dest.CalibrationDate, opt => opt.MapFrom(src => src.CalibrationDate))
           .ForMember(dest => dest.CalibrationInterval, opt => opt.MapFrom(src => src.CalibrationInterval))
           .ForMember(dest => dest.CalibrationResult, opt => opt.MapFrom(src => src.CalibrationResult))
           .ForMember(dest => dest.MaterialNumber, opt => opt.MapFrom(src => src.MaterialNumber))
           .ForMember(dest => dest.CreationDate, opt => opt.MapFrom(src => src.CreationDate));

      CreateMap<DeviceStatus, DeviceStatusViewModel>()
           .ForMember(dest => dest.Name, opt => opt.MapFrom(src => src.Name));
    }
  }
}
